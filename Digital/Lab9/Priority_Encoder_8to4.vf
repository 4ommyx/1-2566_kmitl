////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Priority_Encoder_8to4.vf
// /___/   /\     Timestamp : 09/24/2023 01:18:42
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/natta/OneDrive/Desktop/1_2566/Digital/Lab9/Priority_Encoder_8to4.vf -w C:/Users/natta/OneDrive/Desktop/Priority_Encoder_8to4.sch
//Design Name: Priority_Encoder_8to4
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Priority_Encoder_8to4(S0, 
                             S1, 
                             S2, 
                             S3, 
                             S4, 
                             S5, 
                             S6, 
                             S7, 
                             Out_A, 
                             Out_B, 
                             Out_C, 
                             Out_D);

    input S0;
    input S1;
    input S2;
    input S3;
    input S4;
    input S5;
    input S6;
    input S7;
   output Out_A;
   output Out_B;
   output Out_C;
   output Out_D;
   
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_54;
   wire XLXN_65;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_102;
   wire XLXN_104;
   wire Out_D_DUMMY;
   
   assign Out_D = Out_D_DUMMY;
   AND2B1  XLXI_1 (.I0(Out_D_DUMMY), 
                  .I1(XLXN_104), 
                  .O(XLXN_14));
   AND2B1  XLXI_2 (.I0(Out_D_DUMMY), 
                  .I1(XLXN_102), 
                  .O(XLXN_11));
   AND2B1  XLXI_3 (.I0(Out_D_DUMMY), 
                  .I1(XLXN_65), 
                  .O(XLXN_12));
   AND2B1  XLXI_4 (.I0(Out_D_DUMMY), 
                  .I1(XLXN_54), 
                  .O(XLXN_13));
   OR4  XLXI_5 (.I0(XLXN_13), 
               .I1(XLXN_12), 
               .I2(XLXN_11), 
               .I3(XLXN_14), 
               .O(Out_C));
   AND4B3  XLXI_6 (.I0(Out_D_DUMMY), 
                  .I1(XLXN_102), 
                  .I2(XLXN_104), 
                  .I3(XLXN_69), 
                  .O(XLXN_15));
   AND4B3  XLXI_7 (.I0(Out_D_DUMMY), 
                  .I1(XLXN_102), 
                  .I2(XLXN_104), 
                  .I3(XLXN_68), 
                  .O(XLXN_16));
   AND2B1  XLXI_8 (.I0(Out_D_DUMMY), 
                  .I1(XLXN_65), 
                  .O(XLXN_18));
   AND2B1  XLXI_9 (.I0(Out_D_DUMMY), 
                  .I1(XLXN_54), 
                  .O(XLXN_19));
   OR4  XLXI_10 (.I0(XLXN_19), 
                .I1(XLXN_18), 
                .I2(XLXN_16), 
                .I3(XLXN_15), 
                .O(Out_B));
   AND5B4  XLXI_11 (.I0(Out_D_DUMMY), 
                   .I1(XLXN_65), 
                   .I2(XLXN_104), 
                   .I3(XLXN_69), 
                   .I4(XLXN_70), 
                   .O(XLXN_31));
   AND4B3  XLXI_12 (.I0(Out_D_DUMMY), 
                   .I1(XLXN_65), 
                   .I2(XLXN_104), 
                   .I3(XLXN_68), 
                   .O(XLXN_28));
   AND3B2  XLXI_13 (.I0(Out_D_DUMMY), 
                   .I1(XLXN_65), 
                   .I2(XLXN_102), 
                   .O(XLXN_29));
   AND2B1  XLXI_28 (.I0(Out_D_DUMMY), 
                   .I1(XLXN_54), 
                   .O(XLXN_30));
   OR4  XLXI_29 (.I0(XLXN_30), 
                .I1(XLXN_29), 
                .I2(XLXN_28), 
                .I3(XLXN_31), 
                .O(Out_A));
   BUF  XLXI_46 (.I(S7), 
                .O(Out_D_DUMMY));
   BUF  XLXI_47 (.I(S6), 
                .O(XLXN_54));
   BUF  XLXI_48 (.I(S5), 
                .O(XLXN_65));
   BUF  XLXI_49 (.I(S4), 
                .O(XLXN_102));
   BUF  XLXI_50 (.I(S3), 
                .O(XLXN_104));
   BUF  XLXI_51 (.I(S2), 
                .O(XLXN_68));
   BUF  XLXI_52 (.I(S1), 
                .O(XLXN_69));
   BUF  XLXI_53 (.I(S0), 
                .O(XLXN_70));
endmodule
